<?xml version="1.0" encoding="UTF-8"?>
<project name="adamia-3d" basedir="." default="adamia3d">
	<property name="closurePath" value="build/closure-compiler.jar" />
	<tstamp>
		<format property="A3D-DATE" pattern="MM/dd/yyyy" locale="en,US"/>
	</tstamp>
	
	<property description="Path to output targets" name="dist" value="./dist" />
	
	<!-- Choose amongst: WHITESPACE_ONLY, SIMPLE_OPTIMIZATIONS, ADVANCED_OPTIMIZATIONS -->
	<property name="compilation-level" value="ADVANCED_OPTIMIZATIONS" />
	<!-- Choose amongst: QUIET, DEFAULT, VERBOSE -->
	<property name="warning-level" value="DEFAULT" />
	
	<property name="A3D" value="${dist}/adamia3d.js" />
	<property name="A3D-MIN" value="${dist}/adamia3d.min.js" />
	<property name="A3DMATH" value="${dist}/adamia3d-math.js" />
	<property name="A3DMATH-MIN" value="${dist}/adamia3d-math.min.js" />
	<property name="A3DBYTE" value="${dist}/bytearray.js" />
	<property name="A3DBYTE-MIN" value="${dist}/bytearray.min.js" />
	
	<loadfile property="VERSION" srcfile="version.txt" />
	<loadfile property="HEADER" srcFile="src/header.js">
		<filterchain>
			<replacetokens>
				<token key="VERSION" value="${VERSION}" />
				<token key="DATE" value="${A3D-DATE}" />
			</replacetokens>
		</filterchain>
	</loadfile>
	
	<target name="init" description="Setup for all targets">
		<mkdir dir="${dist}" />
	</target>
	
	<target name="adamia3d" depends="init" description="Full source build">
		<echo message="Building ${A3D}" />
		<concat destfile="${A3D}">
			<header>${HEADER}</header>
			<fileset file="src/init.js" />
			<fileset file="src/class.js" />
			<fileset file="src/math.js" />
			<fileset file="src/util.js" />
			<fileset file="src/engine.js" />
			<fileset file="src/timeline.js" />
			<fileset file="src/render/renderer.js" />
			<fileset file="src/render/renderercanvas.js" />
			<fileset file="src/render/renderercss3.js" />
			<!-- <fileset file="src/render/renderersvg.js" /> -->
			<fileset file="src/shaders/color.js" />
			<fileset file="src/shaders/shader.js" />
			<fileset file="src/shaders/spriteshader.js" />
			<fileset file="src/geometry/primitives.js" />
			<fileset file="src/geometry/mesh.js" />
			<fileset file="src/loaders/bytearray.js" />
			<fileset file="src/loaders/loader.js" />
			<fileset file="src/loaders/loader3ds.js" />
		</concat>
		<echo message="${A3D} built." />
	</target>
	
	<target name="math" depends="init" description="Math library, source build">
		<echo message="Building ${A3DMATH}" />
		<concat destfile="${A3DMATH}">
			<header>${HEADER}</header>
			<fileset file="src/init.js" />
			<fileset file="src/class.js" />
			<fileset file="src/math.js" />
		</concat>
		<replaceregexp match="@VERSION" replace="${version}" flags="g" byline="true" file="${A3DMATH}" />
		<replaceregexp match="Date: " replace="Date: ${A3D-DATE}" file="${A3DMATH}" />
		<echo message="${A3DMATH} built." />
	</target>
	
	<target name="bytearray" depends="init" description="Math library, source build">
		<echo message="Building ${A3DBYTE}" />
		<concat destfile="${A3DBYTE}">
			<header>${HEADER}</header>
			<fileset file="src/init.js" />
			<fileset file="src/loaders/bytearray.js" />
		</concat>
		<replaceregexp match="@VERSION" replace="${version}" flags="g" byline="true" file="${A3DBYTE}" />
		<replaceregexp match="Date: " replace="Date: ${A3D-DATE}" file="${A3DBYTE}" />
		<echo message="${A3DBYTE} built." />
	</target>
	
	<target name="min" depends="adamia3d" description="Minification">
		<property name="IN" value="${A3D}" />
		<property name="OUT" value="${A3D-MIN}" />
		
		<echo message="Building ${OUT}" />
		<exec executable="java">
            <arg line="-jar ${closurePath} --warning_level=${warning-level} --compilation_level=${compilation-level} --js=${IN} --js_output_file=${OUT}.tmp --property_map_output_file=${OUT}.prop.map" />
        </exec>
		<replaceregexp match="^([^:]+):([^:]+)" replace="\2:\1" flags="g" byline="true" file="${OUT}.prop.map" />
		<replaceregexp match="^/[*]" replace="/** @preserve" flags="g" byline="true" file="${OUT}.tmp" />
		<exec executable="java" input="${OUT}.tmp" output="${OUT}">
            <arg line="-jar ${closurePath} --warning_level=${warning-level} --compilation_level=${compilation-level} --property_map_input_file=${OUT}.prop.map" />
        </exec>
		<delete file="${OUT}.tmp" />
		<delete file="${OUT}.prop.map" />
		<echo message="${OUT} built." />
	</target>
	
	<target name="math-min" depends="math" description="Minification, math library only">
		<property name="IN" value="${A3DMATH}" />
		<property name="OUT" value="${A3DMATH-MIN}" />
		
		<echo message="Building ${OUT}" />
		<exec executable="java">
            <arg line="-jar ${closurePath} --warning_level=${warning-level} --compilation_level=${compilation-level} --js=${IN} --js_output_file=${OUT}.tmp --property_map_output_file=${OUT}.prop.map" />
        </exec>
		<replaceregexp match="^([^:]+):([^:]+)" replace="\2:\1" flags="g" byline="true" file="${OUT}.prop.map" />
		<replaceregexp match="^/[*]" replace="/** @preserve " flags="g" byline="true" file="${OUT}.tmp" />
		<exec executable="java" input="${OUT}.tmp" output="${OUT}">
            <arg line="-jar ${closurePath} --warning_level=${warning-level} --compilation_level=${compilation-level} --property_map_input_file=${OUT}.prop.map" />
        </exec>
		<delete file="${OUT}.tmp" />
		<delete file="${OUT}.prop.map" />
		<echo message="${OUT} built." />
	</target>
	
	<target name="bytearray-min" depends="bytearray" description="Minification, bytearray only">
		<property name="IN" value="${A3DBYTE}" />
		<property name="OUT" value="${A3DBYTE-MIN}" />
		
		<echo message="Building ${OUT}" />
		<exec input="${IN}" output="${OUT}.tmp" executable="java">
            <arg line="-jar ${closurePath} --warning_level=${warning-level} --compilation_level=${compilation-level} --property_map_output_file=${OUT}.prop.map" />
        </exec>
		<replaceregexp match="^([^:]+):([^:]+)" replace="\2:\1" flags="g" byline="true" file="${OUT}.prop.map" />
		<replaceregexp match="^/[*]" replace="/** @preserve " flags="g" byline="true" file="${OUT}.tmp" />
		<exec executable="java" input="${OUT}.tmp" output="${OUT}">
            <arg line="-jar ${closurePath} --warning_level=${warning-level} --compilation_level=${compilation-level} --property_map_input_file=${OUT}.prop.map" />
        </exec>
		<delete file="${OUT}.tmp" />
		<delete file="${OUT}.prop.map" />
		<echo message="${OUT} built." />
	</target>
	
	<target name="clean">
		<delete dir="${dist}" />
	</target>
</project>